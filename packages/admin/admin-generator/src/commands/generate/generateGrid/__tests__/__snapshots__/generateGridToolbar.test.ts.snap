// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generateGridToolbar generates empty toolbar when no features are enabled 1`] = `
"
    function BooksGridToolbar() {
        return (
            <DataGridToolbar>
                <FillSpace />
            </DataGridToolbar>
        );
    }"
`;

exports[`generateGridToolbar generates toolbar with all features enabled 1`] = `
"interface BooksGridToolbarToolbarProps extends GridToolbarProps {
         toolbarAction: ReactNode;
         exportApi: ExportApi;
}
    function BooksGridToolbar({
        toolbarAction,exportApi
    }: BooksGridToolbarToolbarProps) {
        return (
            <DataGridToolbar>
                <GridToolbarQuickFilter />
                <GridFilterButton />
                <FillSpace />
        <CrudMoreActionsMenu
        slotProps={{
            button: {
                responsive: true
            }
        }}
        overallActions={[
            {
                        label: <FormattedMessage {...messages.downloadAsExcel} />,
                        icon: exportApi.loading ? <CircularProgress size={20} /> : <ExcelIcon />,
                        onClick: () => exportApi.exportGrid(),
                        disabled: exportApi.loading,
                    }
        ]}
    />
        {toolbarAction}
            </DataGridToolbar>
        );
    }"
`;

exports[`generateGridToolbar generates toolbar with custom newEntryText 1`] = `
"
    function BooksGridToolbar() {
        return (
            <DataGridToolbar>
                <FillSpace />
        <Button responsive startIcon={<AddIcon />} component={StackLink} pageName="add" payload="add">
        <FormattedMessage id="booksMessages.bookFragment.newEntry" defaultMessage={\`Create new book\`}  />
    </Button>
            </DataGridToolbar>
        );
    }"
`;

exports[`generateGridToolbar generates toolbar with minimal features 1`] = `
"
    function BooksGridToolbar() {
        return (
            <DataGridToolbar>
                <FillSpace />
        <Button responsive startIcon={<AddIcon />} component={StackLink} pageName="add" payload="add">
        <FormattedMessage id="booksMessages.bookFragment.newEntry" defaultMessage={\`New Book\`}  />
    </Button>
            </DataGridToolbar>
        );
    }"
`;

exports[`generateGridToolbar generates valid Toolbar props for only excelExport enabled 1`] = `
"interface BooksGridToolbarToolbarProps extends GridToolbarProps {
         exportApi: ExportApi;
}
    function BooksGridToolbar({
        exportApi
    }: BooksGridToolbarToolbarProps) {
        return (
            <DataGridToolbar>
                <FillSpace />
        <CrudMoreActionsMenu
        slotProps={{
            button: {
                responsive: true
            }
        }}
        overallActions={[
            {
                        label: <FormattedMessage {...messages.downloadAsExcel} />,
                        icon: exportApi.loading ? <CircularProgress size={20} /> : <ExcelIcon />,
                        onClick: () => exportApi.exportGrid(),
                        disabled: exportApi.loading,
                    }
        ]}
    />
            </DataGridToolbar>
        );
    }"
`;
