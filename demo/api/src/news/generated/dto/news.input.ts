// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { Field, InputType } from "@nestjs/graphql";
import { Transform } from "class-transformer";
import { IsString, IsNotEmpty, ValidateNested, IsDate, IsEnum } from "class-validator";
import { BlockInputInterface, DamImageBlock, IsSlug, PartialType, RootBlockInputScalar, isBlockInputInterface } from "@comet/cms-api";
import { NewsCategory, NewsStatus } from "../../entities/news.entity";
import { NewsContentBlock } from "../../blocks/news-content.block";
@InputType()
export class NewsInput {
    @IsNotEmpty()
    @IsString()
    @IsSlug()
    @Field()
    slug: string;
    @IsNotEmpty()
    @IsString()
    @Field()
    title: string;
    @IsNotEmpty()
    @IsEnum(NewsStatus)
    @Field(() => NewsStatus, { defaultValue: NewsStatus.Active, })
    status: NewsStatus;
    @IsNotEmpty()
    @IsDate()
    @Field()
    date: Date;
    @IsNotEmpty()
    @IsEnum(NewsCategory)
    @Field(() => NewsCategory)
    category: NewsCategory;
    @IsNotEmpty()
    @Field(() => RootBlockInputScalar(DamImageBlock))
    @Transform(({ value }) => (isBlockInputInterface(value) ? value : DamImageBlock.blockInputFactory(value)), { toClassOnly: true })
    @ValidateNested()
    image: BlockInputInterface;
    @IsNotEmpty()
    @Field(() => RootBlockInputScalar(NewsContentBlock))
    @Transform(({ value }) => (isBlockInputInterface(value) ? value : NewsContentBlock.blockInputFactory(value)), { toClassOnly: true })
    @ValidateNested()
    content: BlockInputInterface;
}
@InputType()
export class NewsUpdateInput extends PartialType(NewsInput) {
}
