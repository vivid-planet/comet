// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { BlockInputInterface, isBlockInputInterface } from "@comet/blocks-api";
import { DamImageBlock, IsUndefinable, PartialType, RootBlockInputScalar } from "@comet/cms-api";
import { Field, InputType, Int } from "@nestjs/graphql";
import { Transform } from "class-transformer";
import { IsInt, IsNotEmpty, IsString, Min, ValidateNested } from "class-validator";

@InputType()
export class ProductVariantInput {
    @IsNotEmpty()
    @IsString()
    @Field()
    name: string;

    @IsNotEmpty()
    @Field(() => RootBlockInputScalar(DamImageBlock))
    @Transform(({ value }) => (isBlockInputInterface(value) ? value : DamImageBlock.blockInputFactory(value)), { toClassOnly: true })
    @ValidateNested()
    image: BlockInputInterface;

    @IsUndefinable()
    @Min(1)
    @IsInt()
    @Field(() => Int, { nullable: true })
    position?: number;
}

@InputType()
export class ProductVariantUpdateInput extends PartialType(ProductVariantInput) {}
