// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { DateTimeFilter, IsUndefinable, ManyToManyFilter, OneToManyFilter, StringFilter } from "@comet/cms-api";
import { Field, InputType } from "@nestjs/graphql";
import { Type } from "class-transformer";
import { ValidateNested } from "class-validator";

@InputType()
export class ProductTagFilter {
    @Field(() => StringFilter, { nullable: true })
    @ValidateNested()
    @IsUndefinable()
    @Type(() => StringFilter)
    title?: StringFilter;

    @Field(() => ManyToManyFilter, { nullable: true })
    @ValidateNested()
    @IsUndefinable()
    @Type(() => ManyToManyFilter)
    products?: ManyToManyFilter;

    @Field(() => OneToManyFilter, { nullable: true })
    @ValidateNested()
    @IsUndefinable()
    @Type(() => OneToManyFilter)
    productsWithStatus?: OneToManyFilter;

    @Field(() => DateTimeFilter, { nullable: true })
    @ValidateNested()
    @IsUndefinable()
    @Type(() => DateTimeFilter)
    createdAt?: DateTimeFilter;

    @Field(() => DateTimeFilter, { nullable: true })
    @ValidateNested()
    @IsUndefinable()
    @Type(() => DateTimeFilter)
    updatedAt?: DateTimeFilter;

    @Field(() => [ProductTagFilter], { nullable: true })
    @Type(() => ProductTagFilter)
    @ValidateNested({ each: true })
    @IsUndefinable()
    and?: ProductTagFilter[];

    @Field(() => [ProductTagFilter], { nullable: true })
    @Type(() => ProductTagFilter)
    @ValidateNested({ each: true })
    @IsUndefinable()
    or?: ProductTagFilter[];
}
