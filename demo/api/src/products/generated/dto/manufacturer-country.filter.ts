// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { StringFilter, NumberFilter, BooleanFilter, DateFilter, DateTimeFilter, ManyToOneFilter, OneToManyFilter, ManyToManyFilter, IdFilter, createEnumFilter, createEnumsFilter } from "@comet/cms-api";
import { Field, InputType } from "@nestjs/graphql";
import { Type } from "class-transformer";
import { IsNumber, IsOptional, IsString, ValidateNested } from "class-validator";
@InputType()
export class ManufacturerCountryFilter {
    @Field(() => StringFilter, { nullable: true })
    @ValidateNested()
    @IsOptional()
    @Type(() => StringFilter)
    id?: StringFilter;
    @Field(() => StringFilter, { nullable: true })
    @ValidateNested()
    @IsOptional()
    @Type(() => StringFilter)
    label?: StringFilter;
    @Field(() => NumberFilter, { nullable: true })
    @ValidateNested()
    @IsOptional()
    @Type(() => NumberFilter)
    used?: NumberFilter;
    @Field(() => [ManufacturerCountryFilter], { nullable: true })
    @Type(() => ManufacturerCountryFilter)
    @ValidateNested({ each: true })
    @IsOptional()
    and?: ManufacturerCountryFilter[];
    @Field(() => [ManufacturerCountryFilter], { nullable: true })
    @Type(() => ManufacturerCountryFilter)
    @ValidateNested({ each: true })
    @IsOptional()
    or?: ManufacturerCountryFilter[];
}
