// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { gqlArgsToMikroOrmQuery, RequiredPermission } from "@comet/cms-api";
import { EntityManager, FindOptions } from "@mikro-orm/postgresql";
import { Args, Query, Resolver } from "@nestjs/graphql";

import { ManufacturerCountry } from "../entities/manufacturer-country.entity";
import { ManufacturerCountriesArgs } from "./dto/manufacturer-countries.args";
import { PaginatedManufacturerCountries } from "./dto/paginated-manufacturer-countries";

@Resolver(() => ManufacturerCountry)
@RequiredPermission(["manufacturerCountries"], { skipScopeCheck: true })
export class ManufacturerCountryResolver {
    constructor(private readonly entityManager: EntityManager) {}

    @Query(() => PaginatedManufacturerCountries)
    async manufacturerCountries(@Args() { search, filter, offset, limit }: ManufacturerCountriesArgs): Promise<PaginatedManufacturerCountries> {
        const where = gqlArgsToMikroOrmQuery({ search, filter }, this.entityManager.getMetadata(ManufacturerCountry));

        const options: FindOptions<ManufacturerCountry> = { offset, limit };

        const [entities, totalCount] = await this.entityManager.findAndCount(ManufacturerCountry, where, options);
        return new PaginatedManufacturerCountries(entities, totalCount);
    }
}
