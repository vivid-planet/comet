// This file has been generated by comet api-generator.
// You may choose to use this file as scaffold by moving this file out of generated folder and removing this comment.
import { InjectRepository } from "@mikro-orm/nestjs";
import { EntityManager, EntityRepository, raw } from "@mikro-orm/postgresql";
import { Injectable } from "@nestjs/common";

import { ProductCategory } from "../entities/product-category.entity";

@Injectable()
export class ProductCategoriesService {
    constructor(
        private readonly entityManager: EntityManager,
        @InjectRepository(ProductCategory) private readonly repository: EntityRepository<ProductCategory>,
    ) {}

    async incrementPositions(lowestPosition: number, highestPosition?: number) {
        // Increment positions between newPosition (inclusive) and oldPosition (exclusive)
        await this.repository.nativeUpdate(
            { position: { $gte: lowestPosition, ...(highestPosition ? { $lt: highestPosition } : {}) } },
            { position: raw("position + 1") },
        );
    }

    async decrementPositions(lowestPosition: number, highestPosition?: number) {
        // Decrement positions between oldPosition (exclusive) and newPosition (inclusive)
        await this.repository.nativeUpdate(
            { position: { $gt: lowestPosition, ...(highestPosition ? { $lte: highestPosition } : {}) } },
            { position: raw("position - 1") },
        );
    }

    async getLastPosition() {
        return this.repository.count({});
    }
}
