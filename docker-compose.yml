services:
    postgres:
        image: bitnami/postgresql:15
        tty: true
        volumes:
            - postgres:/bitnami/postgresql
        ports:
            - "${POSTGRESQL_PORT}:5432"
        environment:
            POSTGRESQL_USER: postgres
            POSTGRESQL_PASSWORD: ${POSTGRESQL_PWD_DECODED}
            POSTGRESQL_DATABASE: ${POSTGRESQL_DB}
        networks:
            - postgres

    imgproxy:
        image: darthsim/imgproxy:latest
        volumes:
            - ./demo/uploads:/uploads:ro
        ports:
            - ${IMGPROXY_PORT}:8080
        environment:
            IMGPROXY_KEY: ${IMGPROXY_KEY}
            IMGPROXY_SALT: ${IMGPROXY_SALT}
            IMGPROXY_MAX_SRC_RESOLUTION: 70
            IMGPROXY_LOCAL_FILESYSTEM_ROOT: "/uploads"
            IMGPROXY_USE_ABS: ${IMGPROXY_USE_ABS}
            IMGPROXY_ABS_NAME: ${AZURE_ACCOUNT_NAME}
            IMGPROXY_ABS_KEY: ${AZURE_ACCOUNT_KEY}
            IMGPROXY_USE_S3: ${IMGPROXY_USE_S3}
            IMGPROXY_S3_REGION: ${S3_REGION}
            IMGPROXY_S3_ENDPOINT: ${S3_ENDPOINT}
            AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}

    jaeger:
        image: jaegertracing/all-in-one:1
        ports:
            - ${JAEGER_UI_PORT}:16686
            - ${JAEGER_OLTP_PORT}:4318 #OLTP over HTTP
        environment:
            COLLECTOR_OTLP_ENABLED: "true"
            COLLECTOR_OTLP_HTTP_HOST_PORT: 0.0.0.0:4318

    redis:
        image: redis:7
        command: redis-server --maxmemory 256M --maxmemory-policy allkeys-lru --loglevel warning --requirepass ${REDIS_PASSWORD}
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - redis

networks:
    postgres:
        driver: bridge
    redis:
        driver: bridge

volumes:
    postgres:
        driver: local
