services:
    postgres:
        image: postgres:16
        pull_policy: weekly
        tty: true
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - "127.0.0.1:${POSTGRESQL_PORT}:5432"
        environment:
            POSTGRES_USER: ${POSTGRESQL_USER}
            POSTGRES_PASSWORD: ${POSTGRESQL_PWD_DECODED}
            POSTGRES_DB: ${POSTGRESQL_DB}
        networks:
            - postgres

    imgproxy:
        image: darthsim/imgproxy:v3
        pull_policy: weekly
        volumes:
            - ./demo/uploads:/uploads:ro
        ports:
            - "127.0.0.1:${IMGPROXY_PORT}:8080"
        environment:
            IMGPROXY_KEY: ${IMGPROXY_KEY}
            IMGPROXY_SALT: ${IMGPROXY_SALT}
            IMGPROXY_MAX_SRC_RESOLUTION: 70
            IMGPROXY_LOCAL_FILESYSTEM_ROOT: "/uploads"
            IMGPROXY_USE_ABS: ${IMGPROXY_USE_ABS}
            IMGPROXY_ABS_NAME: ${AZURE_ACCOUNT_NAME}
            IMGPROXY_ABS_KEY: ${AZURE_ACCOUNT_KEY}
            IMGPROXY_USE_S3: ${IMGPROXY_USE_S3}
            IMGPROXY_S3_REGION: ${S3_REGION}
            IMGPROXY_S3_ENDPOINT: ${S3_ENDPOINT}
            AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}

    jaeger:
        image: jaegertracing/all-in-one:1
        pull_policy: weekly
        ports:
            - "127.0.0.1:${JAEGER_UI_PORT}:16686"
            - "127.0.0.1:${JAEGER_OLTP_PORT}:4318" #OLTP over HTTP
        environment:
            COLLECTOR_OTLP_ENABLED: "true"
            COLLECTOR_OTLP_HTTP_HOST_PORT: 0.0.0.0:4318

    redis:
        image: redis:7
        pull_policy: weekly
        command: redis-server --maxmemory 256M --maxmemory-policy allkeys-lru --loglevel warning --requirepass ${REDIS_PASSWORD}
        ports:
            - "127.0.0.1:${REDIS_PORT}:6379"
        networks:
            - redis

    mailhog:
        image: mailhog/mailhog
        pull_policy: weekly
        ports:
            - "127.0.0.1:1025:1025"
            - "127.0.0.1:8025:8025"

    mitmproxy:
        image: mitmproxy/mitmproxy:12
        pull_policy: weekly
        command: mitmweb --mode reverse:http://host.docker.internal:${API_PORT} --listen-port ${API_MITMPROXY_PORT} --web-host 0.0.0.0 --web-port ${MITMPROXY_WEB_INTERFACE_PORT} --no-web-open-browser --set web_password='${MITMPROXY_WEB_PASSWORD}'
        ports:
            - "127.0.0.1:${API_MITMPROXY_PORT}:${API_MITMPROXY_PORT}"  # Proxy port
            - "127.0.0.1:${MITMPROXY_WEB_INTERFACE_PORT}:${MITMPROXY_WEB_INTERFACE_PORT}"  # Web interface port

networks:
    postgres:
        driver: bridge
    redis:
        driver: bridge

volumes:
    postgres:
        driver: local
